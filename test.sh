#!/bin/bash


# 1. Создать каталог Test1 в домашней директории и перейти в него
mkdir -p ~/Test1
cd ~/Test1

# 2. Определить текущий каталог, вывести на экран и записать в файл result_GrokAI
pwd | tee result_GrokAI

# 3. Дописать в файл result_GrokAI вывод команды ls -l /bin
ls -l /bin | tee -a result_GrokAI

# 4. Создать два текстовых файла разными командами с ответами на вопросы
# Файл 1: с использованием cat и heredoc
cat > file1_links.txt << EOF
1) Жесткая ссылка (hard link) — это альтернативное имя для существующего файла, указывающее на тот же inode в файловой системе. Несколько жестких ссылок могут существовать на один и тот же файл, и удаление одной не влияет на другие, пока все не удалены.

Символическая ссылка (symlink) — это специальный файл, содержащий путь к другому файлу или директории. Это как ярлык; если целевой файл удален, symlink становится "битым".

2) Команда tee читает данные из стандартного ввода (stdin) и одновременно записывает их в стандартный вывод (stdout) и в один или несколько файлов. Это полезно для логирования или дублирования вывода.

Опция -a позволяет добавлять (append) данные в файл, вместо перезаписи.
EOF

# Файл 2: с использованием echo
echo "1) Жесткая ссылка (hard link) — это альтернативное имя для существующего файла, указывающее на тот же inode в файловой системе. Несколько жестких ссылок могут существовать на один и тот же файл, и удаление одной не влияет на другие, пока все не удалены.

Символическая ссылка (symlink) — это специальный файл, содержащий путь к другому файлу или директории. Это как ярлык; если целевой файл удален, symlink становится \"битым\".

2) Команда tee читает данные из стандартного ввода (stdin) и одновременно записывает их в стандартный вывод (stdout) и в один или несколько файлов. Это полезно для логирования или дублирования вывода.

Опция -a позволяет добавлять (append) данные в файл, вместо перезаписи." > file2_links.txt

# 5. Упорядочить файлы по размеру, вывести на экран и дописать в result_GrokAI
ls -lS | tee -a result_GrokAI

# 6. Переименовать result_GrokAI в result_GrokAI.txt
mv result_GrokAI result_GrokAI.txt

# 7. Клонировать Git-репозиторий с "Лолитой" (предварительно установить git, если нужно)
git clone https://github.com/kaliglahistory/hihi.git
cd hihi
mv test.txt lolita.txt  # Предполагаем, что книга в test.txt; если файл другой, скорректируйте

# 8. Записать первые 50 строк книги в MyBookGrokAI.txt
head -n 50 lolita.txt > MyBookGrokAI.txt

# 9. Подсчитать количество строк и вхождений слова "Лолита", вывести на экран и дописать в MyBookGrokAI.txt
( echo "Количество строк в книге:" ; wc -l < lolita.txt ; echo "Количество вхождений 'Лолита':" ; grep -ci "Лолита" lolita.txt ) | tee -a MyBookGrokAI.txt

# 10. Дописать 50 строк с конца книги, исключая последнюю, в MyBookGrokAI.txt
tail -n 51 lolita.txt | head -n 50 | tee -a MyBookGrokAI.txt

# 11. Создать сжатые архивы, сравнить размеры и записать в MyBookGrokAI.txt
cp lolita.txt lolita_gz.txt
gzip lolita_gz.txt
cp lolita.txt lolita_bz.txt
bzip2 lolita_bz.txt
( echo "Размеры файлов:" ; ls -lh lolita.txt lolita_gz.txt.gz lolita_bz.txt.bz2 ) | tee -a MyBookGrokAI.txt

# 12. Найти все файлы .conf в /etc и записать в result_GrokAI.txt (вернуться в ~/Test1)
cd ~/Test1
find /etc -name "*.conf" >> result_GrokAI.txt

# 13. Записать последние 500 команд из истории в MyCommands_GrokAI.txt
history | tail -n 500 > MyCommands_GrokAI.txt

echo "Скрипт GrokAI.sh выполнен успешно!"